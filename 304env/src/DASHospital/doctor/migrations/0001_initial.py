# Generated by Django 2.1.3 on 2018-11-12 04:29

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Appointment',
            fields=[
                ('appointmentid', models.AutoField(primary_key=True, serialize=False)),
                ('date', models.DateField()),
                ('time', models.TimeField()),
            ],
            options={
                'managed': False,
                'db_table': 'appointment',
            },
        ),
        migrations.CreateModel(
            name='AuthGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=80, unique=True)),
            ],
            options={
                'managed': False,
                'db_table': 'auth_group',
            },
        ),
        migrations.CreateModel(
            name='AuthGroupPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'managed': False,
                'db_table': 'auth_group_permissions',
            },
        ),
        migrations.CreateModel(
            name='AuthPermission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('codename', models.CharField(max_length=100)),
            ],
            options={
                'managed': False,
                'db_table': 'auth_permission',
            },
        ),
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_superuser', models.BooleanField()),
                ('username', models.CharField(max_length=150, unique=True)),
                ('first_name', models.CharField(max_length=30)),
                ('last_name', models.CharField(max_length=150)),
                ('email', models.CharField(max_length=254)),
                ('is_staff', models.BooleanField()),
                ('is_active', models.BooleanField()),
                ('date_joined', models.DateTimeField()),
            ],
            options={
                'managed': False,
                'db_table': 'auth_user',
            },
        ),
        migrations.CreateModel(
            name='AuthUserGroups',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'managed': False,
                'db_table': 'auth_user_groups',
            },
        ),
        migrations.CreateModel(
            name='AuthUserUserPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'managed': False,
                'db_table': 'auth_user_user_permissions',
            },
        ),
        migrations.CreateModel(
            name='DjangoAdminLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_time', models.DateTimeField()),
                ('object_id', models.TextField(blank=True, null=True)),
                ('object_repr', models.CharField(max_length=200)),
                ('action_flag', models.SmallIntegerField()),
                ('change_message', models.TextField()),
            ],
            options={
                'managed': False,
                'db_table': 'django_admin_log',
            },
        ),
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_label', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
            options={
                'managed': False,
                'db_table': 'django_content_type',
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'managed': False,
                'db_table': 'django_migrations',
            },
        ),
        migrations.CreateModel(
            name='DjangoSession',
            fields=[
                ('session_key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('session_data', models.TextField()),
                ('expire_date', models.DateTimeField()),
            ],
            options={
                'managed': False,
                'db_table': 'django_session',
            },
        ),
        migrations.CreateModel(
            name='Facility',
            fields=[
                ('id', models.CharField(max_length=8, primary_key=True, serialize=False)),
                ('type', models.CharField(max_length=20)),
            ],
            options={
                'managed': False,
                'db_table': 'facility',
            },
        ),
        migrations.CreateModel(
            name='Medicine',
            fields=[
                ('din', models.CharField(max_length=8, primary_key=True, serialize=False)),
                ('brand', models.CharField(max_length=20)),
                ('ingredients', models.CharField(blank=True, max_length=20, null=True)),
                ('sideeffect', models.CharField(blank=True, max_length=80, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'medicine',
            },
        ),
        migrations.CreateModel(
            name='Patient',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.CharField(max_length=30)),
                ('name', models.CharField(max_length=20)),
                ('healthcard', models.CharField(max_length=20)),
                ('phone', models.CharField(blank=True, max_length=13, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'patient',
            },
        ),
        migrations.CreateModel(
            name='Prescription',
            fields=[
                ('prescriptionid', models.AutoField(primary_key=True, serialize=False)),
                ('instruction', models.CharField(blank=True, max_length=30, null=True)),
                ('substitutable', models.TextField(blank=True, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'prescription',
            },
        ),
        migrations.CreateModel(
            name='ScheduledTime',
            fields=[
                ('date', models.DateField(primary_key=True, serialize=False)),
                ('starttime', models.TimeField()),
                ('endtime', models.TimeField()),
                ('notes', models.CharField(blank=True, max_length=60, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'scheduled_time',
            },
        ),
        migrations.CreateModel(
            name='Staff',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.CharField(max_length=30)),
                ('name', models.CharField(max_length=20)),
                ('license', models.CharField(max_length=8)),
                ('phone', models.CharField(blank=True, max_length=13, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'staff',
            },
        ),
        migrations.CreateModel(
            name='Weeklyschedule',
            fields=[
                ('id', models.CharField(max_length=8, primary_key=True, serialize=False)),
            ],
            options={
                'managed': False,
                'db_table': 'weeklyschedule',
            },
        ),
        migrations.CreateModel(
            name='Books',
            fields=[
                ('fid', models.ForeignKey(db_column='FID', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='doctor.Facility')),
            ],
            options={
                'managed': False,
                'db_table': 'Books',
            },
        ),
        migrations.CreateModel(
            name='Contains',
            fields=[
                ('prescriptionid', models.ForeignKey(db_column='prescriptionid', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='doctor.Prescription')),
            ],
            options={
                'managed': False,
                'db_table': 'contains',
            },
        ),
        migrations.CreateModel(
            name='Doctor',
            fields=[
                ('id', models.ForeignKey(db_column='id', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='doctor.Staff')),
                ('availableforemergency', models.TextField(blank=True, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'doctor',
            },
        ),
        migrations.CreateModel(
            name='LabTechnician',
            fields=[
                ('id', models.ForeignKey(db_column='id', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='doctor.Staff')),
            ],
            options={
                'managed': False,
                'db_table': 'lab_technician',
            },
        ),
        migrations.CreateModel(
            name='Nurse',
            fields=[
                ('id', models.ForeignKey(db_column='id', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='doctor.Staff')),
            ],
            options={
                'managed': False,
                'db_table': 'nurse',
            },
        ),
        migrations.CreateModel(
            name='Generalpracticioner',
            fields=[
                ('id', models.ForeignKey(db_column='id', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='doctor.Doctor')),
            ],
            options={
                'managed': False,
                'db_table': 'generalpracticioner',
            },
        ),
        migrations.CreateModel(
            name='Specialist',
            fields=[
                ('id', models.ForeignKey(db_column='id', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='doctor.Doctor')),
                ('specialization', models.CharField(blank=True, max_length=20, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'specialist',
            },
        ),
        migrations.CreateModel(
            name='Treats',
            fields=[
                ('did', models.ForeignKey(db_column='did', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='doctor.Doctor')),
            ],
            options={
                'managed': False,
                'db_table': 'treats',
            },
        ),
    ]
